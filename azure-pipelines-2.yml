# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      ls -ltr /usr/lib/jvm/
      sudo apt install openjdk-8-jdk openjdk-8-jre
      ls -ltr /usr/lib/jvm/
      ls -ltr /usr/lib/jvm/ | grep 'java-8-openjdk-amd' | grep -wv lrwxrwxrwx
      ls -ltr /usr/lib/jvm/ | grep java-8-openjdk-amd | grep -wv lrwxrwxrwx | awk '{print $9}'

- bash: |
    jver=$(ls -ltr /usr/lib/jvm/ | grep java-8-openjdk-amd | grep -wv lrwxrwxrwx | awk '{print $9}')
    echo "##vso[task.setvariable variable=jvar;isOutput=true]$(jver)"
  name: JavaVersion


- bash: |
    echo "this is the java version"
    echo $(jver)
    echo $(jvar)
    echo $(JavaVersion.jvar)
  name: JavaVersionOutput
      
# - task: Bash@3
#   inputs:
#     targetType: 'inline'
#     script: |
#       mvn --version
#       java -version
#       sudo update-java-alternatives -s java-1.8.0-openjdk-amd64
#       export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64/
#       export PATH=$PATH:$JAVA_HOME
#       mvn --version
#       java -version
#       echo "this is the java version"
#       echo $(jvar)
#       echo $(JavVersion.jvar)
#       pwd
#       ls -ltr src/spark-listeners/
#       ls -ltr src/spark-listeners-loganalytics/
#       mvn -f src/pom.xml install -P "scala-2.12_spark-3.1.2"


- task: Maven@3
  inputs:
    mavenPomFile: 'src/pom.xml'
    goals: 'install'
    options: 'install -P scala-2.12_spark-3.1.2'
    publishJUnitResults: false
    javaHomeOption: 'Path'
    jdkDirectory: '/usr/lib/jvm/java-8-openjdk-amd64'
    mavenVersionOption: 'Default'
    mavenOptions: '-Xmx3072m'
    mavenAuthenticateFeed: true
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

# - task: CopyFiles@2
#   inputs:
#     SourceFolder: 'src/spark-listeners/target'
#     Contents: 'spark-listeners*sources.jar'
#     TargetFolder: '$(Build.ArtifactStagingDirectory)/spark-listeners'
#     CleanTargetFolder: true

# - task: CopyFiles@2
#   inputs:
#     SourceFolder: 'src/spark-listeners-loganalytics/target'
#     Contents: 'spark-listeners-loganalytics*sources.jar'
#     TargetFolder: '$(Build.ArtifactStagingDirectory)/spark-listeners-loganalytics'
#     CleanTargetFolder: true

